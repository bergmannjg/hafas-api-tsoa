{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ProductType": {
				"description": "A ProductType relates to how a means of transport \"works\" in local context.\nExample: Even though S-Bahn and U-Bahn in Berlin are both trains, they have different operators, service patterns,\nstations and look different. Therefore, they are two distinct products subway and suburban.",
				"properties": {
					"id": {
						"type": "string"
					},
					"mode": {
						"type": "string",
						"enum": [
							"train",
							"bus",
							"watercraft",
							"taxi",
							"gondola",
							"aircraft",
							"car",
							"bicycle",
							"walking"
						]
					},
					"name": {
						"type": "string"
					},
					"short": {
						"type": "string"
					},
					"bitmasks": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"default": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"mode",
					"name",
					"short",
					"bitmasks",
					"default"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Profile": {
				"description": "A profile is a specific customisation for each endpoint.\nIt parses data from the API differently, add additional information, or enable non-default methods.",
				"properties": {
					"locale": {
						"type": "string"
					},
					"timezone": {
						"type": "string"
					},
					"endpoint": {
						"type": "string"
					},
					"products": {
						"items": {
							"$ref": "#/components/schemas/ProductType"
						},
						"type": "array"
					},
					"trip": {
						"type": "boolean"
					},
					"radar": {
						"type": "boolean"
					},
					"refreshJourney": {
						"type": "boolean"
					},
					"journeysFromTrip": {
						"type": "boolean"
					},
					"reachableFrom": {
						"type": "boolean"
					},
					"journeysWalkingSpeed": {
						"type": "boolean"
					},
					"tripsByName": {
						"type": "boolean"
					},
					"remarks": {
						"type": "boolean"
					},
					"remarksGetPolyline": {
						"type": "boolean"
					},
					"lines": {
						"type": "boolean"
					}
				},
				"required": [
					"locale",
					"timezone",
					"endpoint",
					"products"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProfileId": {
				"type": "string",
				"enum": [
					"db",
					"bvg",
					"oebb"
				]
			},
			"Station": {
				"description": "A station is a larger building or area that can be identified by a name.\nIt is usually represented by a single node on a public transport map.\nWhereas a stop usually specifies a location, a station often is a broader area\nthat may span across multiple levels or buildings.",
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"station"
						],
						"nullable": false
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"station": {
						"$ref": "#/components/schemas/Station"
					},
					"location": {
						"$ref": "#/components/schemas/Location"
					},
					"products": {
						"$ref": "#/components/schemas/Products"
					},
					"lines": {
						"items": {
							"$ref": "#/components/schemas/Line"
						},
						"type": "array"
					},
					"isMeta": {
						"type": "boolean"
					},
					"regions": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "region ids"
					},
					"facilities": {
						"$ref": "#/components/schemas/Facilities"
					},
					"reisezentrumOpeningHours": {
						"$ref": "#/components/schemas/ReisezentrumOpeningHours"
					},
					"stops": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Station"
								},
								{
									"$ref": "#/components/schemas/Stop"
								},
								{
									"$ref": "#/components/schemas/Location"
								}
							]
						},
						"type": "array"
					},
					"entrances": {
						"items": {
							"$ref": "#/components/schemas/Location"
						},
						"type": "array"
					},
					"transitAuthority": {
						"type": "string"
					},
					"distance": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Location": {
				"description": "A location object is used by other items to indicate their locations.",
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"location"
						],
						"nullable": false
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"poi": {
						"type": "boolean"
					},
					"address": {
						"type": "string"
					},
					"longitude": {
						"type": "number",
						"format": "double"
					},
					"latitude": {
						"type": "number",
						"format": "double"
					},
					"altitude": {
						"type": "number",
						"format": "double"
					},
					"distance": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Products": {
				"description": "Each public transportation network exposes its products as boolean properties. See {@link ProductType}",
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"type": "boolean"
				}
			},
			"Operator": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"operator"
						],
						"nullable": false
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Line": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"line"
						],
						"nullable": false
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"adminCode": {
						"type": "string"
					},
					"fahrtNr": {
						"type": "string"
					},
					"additionalName": {
						"type": "string"
					},
					"product": {
						"type": "string"
					},
					"public": {
						"type": "boolean"
					},
					"mode": {
						"type": "string",
						"enum": [
							"train",
							"bus",
							"watercraft",
							"taxi",
							"gondola",
							"aircraft",
							"car",
							"bicycle",
							"walking"
						]
					},
					"routes": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "routes ids"
					},
					"operator": {
						"$ref": "#/components/schemas/Operator"
					},
					"express": {
						"type": "boolean"
					},
					"metro": {
						"type": "boolean"
					},
					"night": {
						"type": "boolean"
					},
					"nr": {
						"type": "number",
						"format": "double"
					},
					"symbol": {
						"type": "string"
					},
					"directions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"productName": {
						"type": "string"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Facilities": {
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"anyOf": [
						{
							"type": "string"
						},
						{
							"type": "boolean"
						}
					]
				}
			},
			"ReisezentrumOpeningHours": {
				"properties": {
					"Mo": {
						"type": "string"
					},
					"Di": {
						"type": "string"
					},
					"Mi": {
						"type": "string"
					},
					"Do": {
						"type": "string"
					},
					"Fr": {
						"type": "string"
					},
					"Sa": {
						"type": "string"
					},
					"So": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Ids": {
				"description": "Ids of a Stop, i.e. dhid as 'DELFI Haltestellen ID'",
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"type": "string"
				}
			},
			"Stop": {
				"description": "A stop is a single small point or structure at which vehicles stop.\nA stop always belongs to a station. It may for example be a sign, a basic shelter or a railway platform.",
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"stop"
						],
						"nullable": false
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"location": {
						"$ref": "#/components/schemas/Location"
					},
					"station": {
						"$ref": "#/components/schemas/Station"
					},
					"products": {
						"$ref": "#/components/schemas/Products"
					},
					"lines": {
						"items": {
							"$ref": "#/components/schemas/Line"
						},
						"type": "array"
					},
					"isMeta": {
						"type": "boolean"
					},
					"reisezentrumOpeningHours": {
						"$ref": "#/components/schemas/ReisezentrumOpeningHours"
					},
					"ids": {
						"$ref": "#/components/schemas/Ids"
					},
					"loadFactor": {
						"type": "string"
					},
					"entrances": {
						"items": {
							"$ref": "#/components/schemas/Location"
						},
						"type": "array"
					},
					"transitAuthority": {
						"type": "string"
					},
					"distance": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Hint": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"hint",
							"status",
							"foreign-id",
							"local-fare-zone",
							"stop-website",
							"stop-dhid",
							"transit-authority"
						]
					},
					"code": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"tripId": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"text"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Status": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"hint",
							"status",
							"foreign-id",
							"local-fare-zone",
							"stop-website",
							"stop-dhid",
							"transit-authority"
						]
					},
					"code": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"tripId": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"text"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IcoCrd": {
				"properties": {
					"x": {
						"type": "number",
						"format": "double"
					},
					"y": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string"
					}
				},
				"required": [
					"x",
					"y"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Edge": {
				"properties": {
					"fromLocation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"toLocation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"dir": {
						"type": "number",
						"format": "double"
					},
					"icoCrd": {
						"$ref": "#/components/schemas/IcoCrd"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Event": {
				"properties": {
					"fromLocation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"toLocation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"start": {
						"type": "string"
					},
					"end": {
						"type": "string"
					},
					"sections": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Warning": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"status",
							"warning"
						]
					},
					"id": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"category": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"priority": {
						"type": "number",
						"format": "double"
					},
					"products": {
						"$ref": "#/components/schemas/Products"
					},
					"edges": {
						"items": {
							"$ref": "#/components/schemas/Edge"
						},
						"type": "array"
					},
					"events": {
						"items": {
							"$ref": "#/components/schemas/Event"
						},
						"type": "array"
					},
					"validFrom": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"validUntil": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"modified": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"company": {
						"type": "string"
					},
					"categories": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"affectedLines": {
						"items": {
							"$ref": "#/components/schemas/Line"
						},
						"type": "array"
					},
					"fromStops": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Station"
								},
								{
									"$ref": "#/components/schemas/Stop"
								},
								{
									"$ref": "#/components/schemas/Location"
								}
							]
						},
						"type": "array"
					},
					"toStops": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Station"
								},
								{
									"$ref": "#/components/schemas/Stop"
								},
								{
									"$ref": "#/components/schemas/Location"
								}
							]
						},
						"type": "array"
					}
				},
				"required": [
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PrognosisType": {
				"type": "string",
				"enum": [
					"prognosed",
					"calculated"
				]
			},
			"StopOver": {
				"description": "A stopover represents a vehicle stopping at a stop/station at a specific time.",
				"properties": {
					"stop": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							}
						]
					},
					"departure": {
						"type": "string",
						"description": "null, if last stopOver of trip"
					},
					"departureDelay": {
						"type": "number",
						"format": "double"
					},
					"prognosedDeparture": {
						"type": "string"
					},
					"plannedDeparture": {
						"type": "string"
					},
					"departurePlatform": {
						"type": "string"
					},
					"prognosedDeparturePlatform": {
						"type": "string"
					},
					"plannedDeparturePlatform": {
						"type": "string"
					},
					"arrival": {
						"type": "string",
						"description": "null, if first stopOver of trip"
					},
					"arrivalDelay": {
						"type": "number",
						"format": "double"
					},
					"prognosedArrival": {
						"type": "string"
					},
					"plannedArrival": {
						"type": "string"
					},
					"arrivalPlatform": {
						"type": "string"
					},
					"prognosedArrivalPlatform": {
						"type": "string"
					},
					"plannedArrivalPlatform": {
						"type": "string"
					},
					"remarks": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Hint"
								},
								{
									"$ref": "#/components/schemas/Status"
								},
								{
									"$ref": "#/components/schemas/Warning"
								}
							]
						},
						"type": "array"
					},
					"passBy": {
						"type": "boolean"
					},
					"cancelled": {
						"type": "boolean"
					},
					"departurePrognosisType": {
						"$ref": "#/components/schemas/PrognosisType"
					},
					"arrivalPrognosisType": {
						"$ref": "#/components/schemas/PrognosisType"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Price": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double"
					},
					"currency": {
						"type": "string"
					},
					"hint": {
						"type": "string"
					}
				},
				"required": [
					"amount",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Cycle": {
				"properties": {
					"min": {
						"type": "number",
						"format": "double"
					},
					"max": {
						"type": "number",
						"format": "double"
					},
					"nr": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Frame": {
				"properties": {
					"origin": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"destination": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"t": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"origin",
					"destination"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Geometry": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"Point"
						],
						"nullable": false
					},
					"coordinates": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					}
				},
				"required": [
					"type",
					"coordinates"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Feature": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"Feature"
						],
						"nullable": false
					},
					"properties": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							},
							{
								"properties": {},
								"type": "object"
							}
						]
					},
					"geometry": {
						"$ref": "#/components/schemas/Geometry"
					}
				},
				"required": [
					"type",
					"properties",
					"geometry"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeatureCollection": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"FeatureCollection"
						],
						"nullable": false
					},
					"features": {
						"items": {
							"$ref": "#/components/schemas/Feature"
						},
						"type": "array"
					}
				},
				"required": [
					"type",
					"features"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Alternative": {
				"properties": {
					"tripId": {
						"type": "string"
					},
					"direction": {
						"type": "string"
					},
					"location": {
						"$ref": "#/components/schemas/Location"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"stop": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							}
						]
					},
					"when": {
						"type": "string"
					},
					"plannedWhen": {
						"type": "string"
					},
					"prognosedWhen": {
						"type": "string"
					},
					"delay": {
						"type": "number",
						"format": "double"
					},
					"platform": {
						"type": "string"
					},
					"plannedPlatform": {
						"type": "string"
					},
					"prognosedPlatform": {
						"type": "string"
					},
					"remarks": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Hint"
								},
								{
									"$ref": "#/components/schemas/Status"
								},
								{
									"$ref": "#/components/schemas/Warning"
								}
							]
						},
						"type": "array"
					},
					"cancelled": {
						"type": "boolean"
					},
					"loadFactor": {
						"type": "string"
					},
					"provenance": {
						"type": "string"
					},
					"previousStopovers": {
						"items": {
							"$ref": "#/components/schemas/StopOver"
						},
						"type": "array"
					},
					"nextStopovers": {
						"items": {
							"$ref": "#/components/schemas/StopOver"
						},
						"type": "array"
					},
					"frames": {
						"items": {
							"$ref": "#/components/schemas/Frame"
						},
						"type": "array"
					},
					"polyline": {
						"$ref": "#/components/schemas/FeatureCollection"
					},
					"currentTripPosition": {
						"$ref": "#/components/schemas/Location"
					},
					"origin": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"destination": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"prognosisType": {
						"$ref": "#/components/schemas/PrognosisType"
					}
				},
				"required": [
					"tripId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Leg": {
				"description": "Leg of journey",
				"properties": {
					"tripId": {
						"type": "string"
					},
					"origin": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"destination": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"departure": {
						"type": "string"
					},
					"plannedDeparture": {
						"type": "string"
					},
					"prognosedArrival": {
						"type": "string"
					},
					"departureDelay": {
						"type": "number",
						"format": "double"
					},
					"departurePlatform": {
						"type": "string"
					},
					"prognosedDeparturePlatform": {
						"type": "string"
					},
					"plannedDeparturePlatform": {
						"type": "string"
					},
					"arrival": {
						"type": "string"
					},
					"plannedArrival": {
						"type": "string"
					},
					"prognosedDeparture": {
						"type": "string"
					},
					"arrivalDelay": {
						"type": "number",
						"format": "double"
					},
					"arrivalPlatform": {
						"type": "string"
					},
					"prognosedArrivalPlatform": {
						"type": "string"
					},
					"plannedArrivalPlatform": {
						"type": "string"
					},
					"stopovers": {
						"items": {
							"$ref": "#/components/schemas/StopOver"
						},
						"type": "array"
					},
					"schedule": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"$ref": "#/components/schemas/Price"
					},
					"operator": {
						"type": "number",
						"format": "double"
					},
					"direction": {
						"type": "string"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"reachable": {
						"type": "boolean"
					},
					"cancelled": {
						"type": "boolean"
					},
					"walking": {
						"type": "boolean"
					},
					"loadFactor": {
						"type": "string"
					},
					"distance": {
						"type": "number",
						"format": "double"
					},
					"public": {
						"type": "boolean"
					},
					"transfer": {
						"type": "boolean"
					},
					"cycle": {
						"$ref": "#/components/schemas/Cycle"
					},
					"alternatives": {
						"items": {
							"$ref": "#/components/schemas/Alternative"
						},
						"type": "array"
					},
					"polyline": {
						"$ref": "#/components/schemas/FeatureCollection"
					},
					"remarks": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Hint"
								},
								{
									"$ref": "#/components/schemas/Status"
								},
								{
									"$ref": "#/components/schemas/Warning"
								}
							]
						},
						"type": "array"
					},
					"currentLocation": {
						"$ref": "#/components/schemas/Location"
					},
					"departurePrognosisType": {
						"$ref": "#/components/schemas/PrognosisType"
					},
					"arrivalPrognosisType": {
						"$ref": "#/components/schemas/PrognosisType"
					},
					"checkin": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ScheduledDays": {
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"type": "boolean"
				}
			},
			"Journey": {
				"description": "A journey is a computed set of directions to get from A to B at a specific time.\nIt would typically be the result of a route planning algorithm.",
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"journey"
						],
						"nullable": false
					},
					"legs": {
						"items": {
							"$ref": "#/components/schemas/Leg"
						},
						"type": "array"
					},
					"refreshToken": {
						"type": "string"
					},
					"remarks": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Hint"
								},
								{
									"$ref": "#/components/schemas/Status"
								},
								{
									"$ref": "#/components/schemas/Warning"
								}
							]
						},
						"type": "array"
					},
					"price": {
						"$ref": "#/components/schemas/Price"
					},
					"cycle": {
						"$ref": "#/components/schemas/Cycle"
					},
					"scheduledDays": {
						"$ref": "#/components/schemas/ScheduledDays"
					}
				},
				"required": [
					"type",
					"legs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Journeys": {
				"properties": {
					"realtimeDataUpdatedAt": {
						"type": "number",
						"format": "double"
					},
					"earlierRef": {
						"type": "string"
					},
					"laterRef": {
						"type": "string"
					},
					"journeys": {
						"items": {
							"$ref": "#/components/schemas/Journey"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Trip": {
				"description": "Trip – a vehicle stopping at a set of stops at specific times",
				"properties": {
					"id": {
						"type": "string"
					},
					"origin": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"destination": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Station"
							},
							{
								"$ref": "#/components/schemas/Stop"
							},
							{
								"$ref": "#/components/schemas/Location"
							}
						]
					},
					"departure": {
						"type": "string"
					},
					"plannedDeparture": {
						"type": "string"
					},
					"prognosedArrival": {
						"type": "string"
					},
					"departureDelay": {
						"type": "number",
						"format": "double"
					},
					"departurePlatform": {
						"type": "string"
					},
					"prognosedDeparturePlatform": {
						"type": "string"
					},
					"plannedDeparturePlatform": {
						"type": "string"
					},
					"arrival": {
						"type": "string"
					},
					"plannedArrival": {
						"type": "string"
					},
					"prognosedDeparture": {
						"type": "string"
					},
					"arrivalDelay": {
						"type": "number",
						"format": "double"
					},
					"arrivalPlatform": {
						"type": "string"
					},
					"prognosedArrivalPlatform": {
						"type": "string"
					},
					"plannedArrivalPlatform": {
						"type": "string"
					},
					"stopovers": {
						"items": {
							"$ref": "#/components/schemas/StopOver"
						},
						"type": "array"
					},
					"schedule": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"$ref": "#/components/schemas/Price"
					},
					"operator": {
						"type": "number",
						"format": "double"
					},
					"direction": {
						"type": "string"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"reachable": {
						"type": "boolean"
					},
					"cancelled": {
						"type": "boolean"
					},
					"walking": {
						"type": "boolean"
					},
					"loadFactor": {
						"type": "string"
					},
					"distance": {
						"type": "number",
						"format": "double"
					},
					"public": {
						"type": "boolean"
					},
					"transfer": {
						"type": "boolean"
					},
					"cycle": {
						"$ref": "#/components/schemas/Cycle"
					},
					"alternatives": {
						"items": {
							"$ref": "#/components/schemas/Alternative"
						},
						"type": "array"
					},
					"polyline": {
						"$ref": "#/components/schemas/FeatureCollection"
					},
					"remarks": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Hint"
								},
								{
									"$ref": "#/components/schemas/Status"
								},
								{
									"$ref": "#/components/schemas/Warning"
								}
							]
						},
						"type": "array"
					},
					"scheduledDays": {
						"$ref": "#/components/schemas/ScheduledDays"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TripWithRealtimeData": {
				"properties": {
					"realtimeDataUpdatedAt": {
						"type": "number",
						"format": "double"
					},
					"trip": {
						"$ref": "#/components/schemas/Trip"
					}
				},
				"required": [
					"trip"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Departures": {
				"properties": {
					"realtimeDataUpdatedAt": {
						"type": "number",
						"format": "double"
					},
					"departures": {
						"items": {
							"$ref": "#/components/schemas/Alternative"
						},
						"type": "array"
					}
				},
				"required": [
					"departures"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LinesWithRealtimeData": {
				"properties": {
					"realtimeDataUpdatedAt": {
						"type": "number",
						"format": "double"
					},
					"lines": {
						"items": {
							"$ref": "#/components/schemas/Line"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Duration": {
				"properties": {
					"duration": {
						"type": "number",
						"format": "double"
					},
					"stations": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/Station"
								},
								{
									"$ref": "#/components/schemas/Stop"
								},
								{
									"$ref": "#/components/schemas/Location"
								}
							]
						},
						"type": "array"
					}
				},
				"required": [
					"duration",
					"stations"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DurationsWithRealtimeData": {
				"properties": {
					"realtimeDataUpdatedAt": {
						"type": "number",
						"format": "double"
					},
					"reachable": {
						"items": {
							"$ref": "#/components/schemas/Duration"
						},
						"type": "array"
					}
				},
				"required": [
					"reachable"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Movement": {
				"properties": {
					"direction": {
						"type": "string"
					},
					"tripId": {
						"type": "string"
					},
					"line": {
						"$ref": "#/components/schemas/Line"
					},
					"location": {
						"$ref": "#/components/schemas/Location"
					},
					"nextStopovers": {
						"items": {
							"$ref": "#/components/schemas/StopOver"
						},
						"type": "array"
					},
					"frames": {
						"items": {
							"$ref": "#/components/schemas/Frame"
						},
						"type": "array"
					},
					"polyline": {
						"$ref": "#/components/schemas/FeatureCollection"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Radar": {
				"properties": {
					"realtimeDataUpdatedAt": {
						"type": "number",
						"format": "double"
					},
					"movements": {
						"items": {
							"$ref": "#/components/schemas/Movement"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "hafas-client-rest-api",
		"version": "0.0.1",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/hafas/{profileId}/profile": {
			"get": {
				"operationId": "GetProducts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Profile"
								}
							}
						}
					}
				},
				"description": "Retrieves profile",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/journeys": {
			"get": {
				"operationId": "Getjourneys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Journeys"
								}
							}
						}
					}
				},
				"description": "Retrieves journeys",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "from",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "to",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "departure date, undefined corresponds to Date.Now",
						"in": "query",
						"name": "departure",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "how many search results?",
						"in": "query",
						"name": "results",
						"required": false,
						"schema": {
							"default": 3,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "let journeys pass this station",
						"in": "query",
						"name": "via",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "return stations on the way?",
						"in": "query",
						"name": "stopovers",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "Maximum nr of transfers. Default: Let HAFAS decide.",
						"in": "query",
						"name": "transfers",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "minimum time for a single transfer in minutes",
						"in": "query",
						"name": "transferTime",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "'none', 'partial' or 'complete'",
						"in": "query",
						"name": "accessibility",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "only bike-friendly journeys",
						"in": "query",
						"name": "bike",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "return tickets? only available with some profiles",
						"in": "query",
						"name": "tickets",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "return a shape for each leg?",
						"in": "query",
						"name": "polylines",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose hints & warnings?",
						"in": "query",
						"name": "remarks",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "'slow', 'normal', 'fast'",
						"in": "query",
						"name": "walkingSpeed",
						"required": false,
						"schema": {
							"default": "slow",
							"type": "string"
						}
					},
					{
						"description": "start with walking",
						"in": "query",
						"name": "startWithWalking",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "language to get results in",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"default": "en",
							"type": "string"
						}
					},
					{
						"description": "parse which days each journey is valid on",
						"in": "query",
						"name": "scheduledDays",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/trip": {
			"get": {
				"operationId": "Gettrip",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TripWithRealtimeData"
								}
							}
						}
					}
				},
				"description": "Refetch information about a trip",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "return stations on the way?",
						"in": "query",
						"name": "stopovers",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "return a shape for the trip?",
						"in": "query",
						"name": "polyline",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose hints & warnings?",
						"in": "query",
						"name": "remarks",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse which days each journey is valid on",
						"in": "query",
						"name": "scheduledDays",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "Language of the results",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"default": "en",
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/departures": {
			"get": {
				"operationId": "Getdepartures",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Departures"
								}
							}
						}
					}
				},
				"description": "Retrieves departures",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "station",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "departure date, undefined corresponds to Date.Now",
						"in": "query",
						"name": "when",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "only show departures heading to this station",
						"in": "query",
						"name": "direction",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "filter by line ID",
						"in": "query",
						"name": "line",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "show departures for the next n minutes",
						"in": "query",
						"name": "duration",
						"required": false,
						"schema": {
							"default": 120,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "max. number of results; `null` means \"whatever HAFAS wants\"",
						"in": "query",
						"name": "results",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose lines at the stop/station?",
						"in": "query",
						"name": "linesOfStops",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose hints & warnings?",
						"in": "query",
						"name": "remarks",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "products",
						"in": "query",
						"name": "products",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "language",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"default": "en",
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/locations": {
			"get": {
				"operationId": "Getlocations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"anyOf": [
											{
												"$ref": "#/components/schemas/Station"
											},
											{
												"$ref": "#/components/schemas/Stop"
											},
											{
												"$ref": "#/components/schemas/Location"
											}
										]
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves locations or stops",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "find only exact matches?",
						"in": "query",
						"name": "fuzzy",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "how many search results?",
						"in": "query",
						"name": "results",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "return stops/stations?",
						"in": "query",
						"name": "stops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "return addresses",
						"in": "query",
						"name": "addresses",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "points of interest",
						"in": "query",
						"name": "poi",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose lines at each stop/station?",
						"in": "query",
						"name": "linesOfStops",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "Language of the results",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"default": "en",
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/stop": {
			"get": {
				"operationId": "Getstop",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/Station"
										},
										{
											"$ref": "#/components/schemas/Stop"
										},
										{
											"$ref": "#/components/schemas/Location"
										}
									]
								}
							}
						}
					}
				},
				"description": "Retrieves information about a stop",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "parse & expose lines at the stop/station?",
						"in": "query",
						"name": "linesOfStops",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose hints & warnings?",
						"in": "query",
						"name": "remarks",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "Language of the results",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"default": "en",
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/lines": {
			"get": {
				"operationId": "Getlines",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LinesWithRealtimeData"
								}
							}
						}
					}
				},
				"description": "Fetches all lines known to the HAFAS endpoint",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Language of the results",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"default": "en",
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/nearby": {
			"get": {
				"operationId": "Getnearby",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"anyOf": [
											{
												"$ref": "#/components/schemas/Station"
											},
											{
												"$ref": "#/components/schemas/Stop"
											},
											{
												"$ref": "#/components/schemas/Location"
											}
										]
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves nearby stops from location",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "longitude",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "latitude",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "maximum number of results",
						"in": "query",
						"name": "results",
						"required": false,
						"schema": {
							"default": 8,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "maximum walking distance in meters",
						"in": "query",
						"name": "distance",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "return points of interest?",
						"in": "query",
						"name": "poi",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "return stops/stations?",
						"in": "query",
						"name": "stops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "products",
						"in": "query",
						"name": "products",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose lines at each stop/station?",
						"in": "query",
						"name": "linesOfStops",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "language",
						"in": "query",
						"name": "language",
						"required": false,
						"schema": {
							"default": "en",
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/reachableFrom": {
			"get": {
				"operationId": "GetreachableFrom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DurationsWithRealtimeData"
								}
							}
						}
					}
				},
				"description": "Retrieves stations reachable within a certain time from a location",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "longitude",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "latitude",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "distance",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "maximum of transfers",
						"in": "query",
						"name": "maxTransfers",
						"required": false,
						"schema": {
							"default": 5,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "maximum travel duration in minutes, pass `null` for infinite",
						"in": "query",
						"name": "maxDuration",
						"required": false,
						"schema": {
							"default": 20,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "return leg shapes?",
						"in": "query",
						"name": "polylines",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					}
				]
			}
		},
		"/hafas/{profileId}/radar": {
			"get": {
				"operationId": "Getradar",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Radar"
								}
							}
						}
					}
				},
				"description": "Retrieves all vehicles currently in an area.",
				"security": [],
				"parameters": [
					{
						"description": "endpoint profile id",
						"in": "path",
						"name": "profileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ProfileId"
						}
					},
					{
						"in": "query",
						"name": "north",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "west",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "south",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "east",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "maximum number of vehicles",
						"in": "query",
						"name": "results",
						"required": false,
						"schema": {
							"default": 256,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "nr of frames to compute",
						"in": "query",
						"name": "frames",
						"required": false,
						"schema": {
							"default": 3,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "compute frames for the next n seconds",
						"in": "query",
						"name": "duration",
						"required": false,
						"schema": {
							"default": 20,
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "parse & expose sub-stops of stations?",
						"in": "query",
						"name": "subStops",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "parse & expose entrances of stops/stations?",
						"in": "query",
						"name": "entrances",
						"required": false,
						"schema": {
							"default": true,
							"type": "boolean"
						}
					},
					{
						"description": "return a shape for the trip?",
						"in": "query",
						"name": "polylines",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"description": "when",
						"in": "query",
						"name": "when",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}